name: lint-and-test

on:
    pull_request:
      branches:
      - main
    workflow_dispatch:

jobs:
  sanitize-branch-name:
    runs-on: ubuntu-latest
    outputs:
      sanitized_ref: ${{ steps.sanitize.outputs.sanitized_ref }}
    steps:
      - name: sanitize-branch-name
        id: sanitize
        run: |
          SANITIZED_REF=$(echo "${GITHUB_HEAD_REF}" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')
          SANITIZED_REF=${SANITIZED_REF#-}
          SANITIZED_REF=${SANITIZED_REF%-}
          SANITIZED_REF=${SANITIZED_REF:0:63}
          if [[ -z "$SANITIZED_REF" || "$SANITIZED_REF" =~ ^-+$ ]]; then
            SANITIZED_REF="tmp-branch"
          fi
          echo "sanitized_ref=${SANITIZED_REF}" >> $GITHUB_OUTPUT
        shell: bash
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}

  build-and-lint-services:
    name: Build and Lint Services
    runs-on: ubuntu-latest
    needs: [sanitize-branch-name]
    strategy:
        fail-fast: true
        matrix:
            service: [ "admin-backend", "document-extractor", "rag-backend", "mcp-server"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Docker Image Name
        run: |
          echo "IMAGE_NAME=${{ matrix.service }}:${{ needs.sanitize-branch-name.outputs.sanitized_ref }}-${{ github.run_number }}" >> $GITHUB_ENV
        shell: bash

      - name: Build lint image
        run: |
          docker build -t $IMAGE_NAME --build-arg dev=1 -f services/${{ matrix.service }}/Dockerfile .

      - name: Generate lint report
        run: |
          docker run --rm --entrypoint make "$IMAGE_NAME" lint

      - name: Run tests
        run: |
          docker run --rm --entrypoint make "$IMAGE_NAME" test

  build-and-lint-libs:
    name: Build and Lint Libraries
    runs-on: ubuntu-latest
    needs: [sanitize-branch-name]
    strategy:
        fail-fast: true
        matrix:
            library: [ "rag-core-lib", "rag-core-api", "admin-api-lib", "extractor-api-lib"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Docker Image Name
        run: |
          echo "IMAGE_NAME=${{ matrix.library }}:${{ needs.sanitize-branch-name.outputs.sanitized_ref }}-${{ github.run_number }}" >> $GITHUB_ENV
        shell: bash

      - name: Build lint image
        run: |
          docker build -t $IMAGE_NAME --build-arg DIRECTORY=${{ matrix.library }} --build-arg TEST=1 -f libs/Dockerfile .

      - name: Generate lint report
        run: |
          docker run --rm --entrypoint make "$IMAGE_NAME" lint

      - name: Run tests
        run: |
          docker run --rm --entrypoint make "$IMAGE_NAME" test
