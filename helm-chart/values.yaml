adminBackend:
  replicaCount: 1

  name: admin-backend

  image:
    repository: schwarzit-xx-sit-rag-template-sit-stackit-docker-local.jfrog.io
    name: admin-backend
    pullPolicy: Always
    tag: "443892"

  command:
  - "poetry"
  - "run"
  args:
  - "python"
  - "-m"
  - "uvicorn"
  - "main:perfect_admin_app"
  - "--host"
  - "0.0.0.0"
  - "--port"
  - "8080"
  - "--root-path"
  - "/api"
  debugArgs:
  - "python"
  - "-m"
  - "debugpy"
  - "--wait-for-client"
  - "--listen"
  - "0.0.0.0:31415"
  - "-m"
  - "uvicorn"
  - "main:perfect_admin_app"
  - "--host"
  - "0.0.0.0"
  - "--port"
  - "8080"
  - "--reload"
  - "--reload-dir"
  - "/app/admin-backend"
  - "--reload-dir"
  - "/app/rag-core-library/rag-core-lib"
  - "--reload-dir"
  - "/app/rag-core-library/admin-api-lib"
  - "--root-path"
  - "/api"

  service:
    type: ClusterIP
    port: 8080

  pythonPathEnv:
    PYTHONPATH: src

  ingress:
    enabled: true
    host:
      name: admin.rag.localhost
      path: /api(/|$)(.*)
      pathType: ImplementationSpecific
      port: 8080

  minio:
    enabled: true

  envs:
    summarizer:
      SUMMARIZER_MAXIMUM_INPUT_SIZE: "8000"
      SUMMARIZER_MAXIMUM_CONCURRENCY: "10"
    ragapi:
      RAG_API_HOST: "http://backend:8080"
    chunker:
      CHUNKER_MAX_SIZE: 1000
      CHUNKER_OVERLAP: 300


extractor:
  replicaCount: 1
  name: extractor
  image:
    repository: schwarzit-xx-sit-rag-template-sit-stackit-docker-local.jfrog.io
    name: document-extractor
    pullPolicy: Always
    tag: "443892"

  command:
  - "poetry"
  - "run"
  args:
  - "python"
  - "-m"
  - "uvicorn"
  - "main:perfect_extractor_app"
  - "--host"
  - "0.0.0.0"
  - "--port"
  - "8080"
  debugArgs:
  - "python"
  - "-m"
  - "debugpy"
  - "--wait-for-client"
  - "--listen"
  - "0.0.0.0:31415"
  - "-m"
  - "uvicorn"
  - "main:perfect_extractor_app"
  - "--host"
  - "0.0.0.0"
  - "--port"
  - "8080"
  - "--reload"
  - "--reload-dir"
  - "/app/document-extractor"
  - "--reload-dir"
  - "/app/rag-core-library/extractor-api-lib"


  service:
    type: ClusterIP
    port: 8080

  pythonPathEnv:
    PYTHONPATH: src

adminFrontend:
  name: admin-frontend
  replicaCount: 1
  image:
    repository: schwarzit-xx-sit-rag-template-sit-stackit-docker-local.jfrog.io
    name: admin-frontend
    pullPolicy: Always
    tag: "443892"

  service:
    type: ClusterIP
    port: 8080

  exports:
    chart_name:
      adminFrontendChartName: admin-frontend

  ingress:
    enabled: true
    host:
      name: admin.rag.localhost
      path: /
      pathType: ImplementationSpecific
      port: 8080

global:
  debug:
    backend:
      enabled: false

  ssl: true

  imagePullSecret:
    create: false
    name: cr-credentials

  config:
    dns:
    - admin.rag.ai.mmmake.com
    - rag.ai.mmmake.com
    basicAuth:
      enabled: true
    tls:
      enabled: true
      host: rag.ai.mmmake.com
      secretName: tls-certificate

shared:
  secrets:
    s3:
      accessKey: "admin"
      secretKey: "password"

  envs:
    pdfExtractor:
      PDF_EXTRACTOR_DIAGRAMS_FOLDER_NAME: "connection_diagrams"
      PDF_EXTRACTOR_FOOTER_HEIGHT: 155
    s3:
      S3_ENDPOINT: http://rag-minio:9000
      S3_BUCKET: documents
