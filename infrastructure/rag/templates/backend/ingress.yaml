{{- if .Values.backend.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "backend.ingressFullName" . }}
  annotations:
    {{- if .Values.global.config.basicAuth.enabled }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/cors-max-age: "100"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/rewrite-target: /chat/$2
    {{- if .Values.global.config.tls.enabled }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://{{ .Values.backend.ingress.host.name }}, https://admin.{{ .Values.backend.ingress.host.name }}"
    {{- else }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://{{ .Values.backend.ingress.host.name }}, http://admin.{{ .Values.backend.ingress.host.name }}"
    {{- end }}
spec:
  {{- if .Values.global.config.tls.enabled }}
  tls:
    - hosts:
      - {{ .Values.global.config.tls.host }}
      secretName: {{ .Values.global.config.tls.secretName }}
  {{- end }}
  ingressClassName: nginx
  rules:
  - host: {{ .Values.backend.ingress.host.name }}
    http:
      paths:
        - path: {{ .Values.backend.ingress.host.path }}
          pathType: {{ .Values.backend.ingress.host.pathType }}
          backend:
            service:
              name: {{ $.Values.backend.name }}
              port:
                number: {{ .Values.backend.ingress.host.port }}
{{- end }}
