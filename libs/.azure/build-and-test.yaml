pr:
- develop
- main

pool:
  vmImage: "ubuntu-latest"

variables:
- name: LINTING_DOCKER_IMAGE_NAME
  value: rag_core_library_linting:$(Build.SourceBranchName)-$(Build.BuildId)
- name: RAG_CORE_LIB_TESTING_IMAGE_NAME
  value: rag_core_lib_testing:$(Build.SourceBranchName)-$(Build.BuildId)
- name: RAG_CORE_API_TESTING_IMAGE_NAME
  value: rag_core_api_testing:$(Build.SourceBranchName)-$(Build.BuildId)
- name: ADMIN_API_LIB_TESTING_IMAGE_NAME
  value: admin_api_lib_testing:$(Build.SourceBranchName)-$(Build.BuildId)
- name: EXTRACTOR_API_LIB_TESTING_IMAGE_NAME
  value: extractor_api_lib_testing:$(Build.SourceBranchName)-$(Build.BuildId)

stages:
- stage: BuildAndLint
  jobs:
  - job: BuildAndLintJob
    steps:
    - script: |
        docker build -t $LINTING_DOCKER_IMAGE_NAME --build-arg TEST=0 -f Dockerfile .
      displayName: "Build lint image."
    - script: |
        docker run --rm $LINTING_DOCKER_IMAGE_NAME make lint
      displayName: "Generate lint report."
  - job: TestRagCoreLib
    steps:
    - script: |
        docker build -t $RAG_CORE_LIB_TESTING_IMAGE_NAME --build-arg DIRECTORY=rag-core-lib --build-arg TEST=1 -f Dockerfile .
      displayName: "Build rag-core-lib testing image."
    - script: |
        docker run --rm $RAG_CORE_LIB_TESTING_IMAGE_NAME make test
      displayName: "Run rag-core-lib tests."
  - job: TestRagCoreApi
    steps:
    - script: |
        docker build -t $RAG_CORE_API_TESTING_IMAGE_NAME --build-arg DIRECTORY=rag-core-api --build-arg TEST=1 -f Dockerfile .
      displayName: "Build rag-core-api testing image."
    - script: |
        docker run --rm $RAG_CORE_API_TESTING_IMAGE_NAME make test
      displayName: "Run rag-core-api tests."
  - job: TestAdminApi
    steps:
    - script: |
        docker build -t $ADMIN_API_LIB_TESTING_IMAGE_NAME --build-arg DIRECTORY=admin-api-lib --build-arg TEST=1 -f Dockerfile .
      displayName: "Build admin-api testing image."
    - script: |
        docker run --rm $ADMIN_API_LIB_TESTING_IMAGE_NAME make test
      displayName: "Run admin-api tests."
  - job: TestExtractorApi
    steps:
    - script: |
        docker build -t $EXTRACTOR_API_LIB_TESTING_IMAGE_NAME --build-arg DIRECTORY=extractor-api-lib --build-arg TEST=1 -f Dockerfile .
      displayName: "Build extractor-api testing image."
    - script: |
        docker run --rm $EXTRACTOR_API_LIB_TESTING_IMAGE_NAME make test
      displayName: "Run extractor-api tests."
