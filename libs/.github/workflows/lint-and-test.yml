name: Lint and test workflow

on:
    pull_request:
      branches:
      - main
    workflow_dispatch:

jobs:
  SanitizeBranchName:
    runs-on: ubuntu-latest
    outputs:
      sanitized_ref: ${{ steps.sanitize.outputs.sanitized_ref }}
    steps:
      - name: Sanitize Branch Name
        id: sanitize
        run: |
          SANITIZED_REF=$(echo "${GITHUB_HEAD_REF}" | tr '[:upper:]' '[:lower:]' | tr -c 'a-z0-9' '-')
          SANITIZED_REF=${SANITIZED_REF#-}
          SANITIZED_REF=${SANITIZED_REF%-}
          SANITIZED_REF=${SANITIZED_REF:0:63}
          if [[ -z "$SANITIZED_REF" || "$SANITIZED_REF" =~ ^-+$ ]]; then
            SANITIZED_REF="tmp-branch"
          fi
          echo "::set-output name=sanitized_ref::${SANITIZED_REF}"
        shell: bash
        env:
          GITHUB_HEAD_REF: ${{ github.head_ref }}

  BuildAndLint:
    name: Build and Lint
    runs-on: ubuntu-latest
    needs: [SanitizeBranchName]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: stackitcloud/rag-core-library
      - name: Set Docker Image Name
        run: |
          echo "RAG_CORE_LIBRARY_LINTING_DOCKER_IMAGE_NAME=rag-core-lib-lint:${{ needs.SanitizeBranchName.outputs.sanitized_ref }}-${{ github.run_number }}" >> $GITHUB_ENV
        shell: bash

      - name: Build lint image
        run: |
          docker build -t "$RAG_CORE_LIBRARY_LINTING_DOCKER_IMAGE_NAME" --build-arg TEST=0 -f Dockerfile .

      - name: Generate lint report
        run: |
          docker run --rm "$RAG_CORE_LIBRARY_LINTING_DOCKER_IMAGE_NAME" make lint

  BuildAndTestMatrix:
    runs-on: ubuntu-latest
    needs: [SanitizeBranchName]
    strategy:
        fail-fast: true
        matrix:
            service: [ "rag-core-lib", "rag-core-api", "admin-api-lib", "extractor-api-lib" ]
    steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
              token: ${{ secrets.GITHUB_TOKEN }}
              repository: stackitcloud/rag-core-library

        - name: Set Docker Image Name
          run: echo "TEST_IMAGE_NAME=${{ matrix.service }}-test:${{ needs.SanitizeBranchName.outputs.sanitized_ref }}-${{ github.run_number }}" >> $GITHUB_ENV
          shell: bash

        - name: Build test image
          run: docker build -t "$TEST_IMAGE_NAME" --build-arg TEST=1 --build-arg DIRECTORY=${{ matrix.service }} -f Dockerfile .

        - name: Run tests
          run: docker run --rm "$TEST_IMAGE_NAME" make test
