# coding: utf-8

"""
    RAG SIT x Stackit

    The perfect rag solution.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from admin_api_lib.rag_backend_client.openapi_client.models.chat_request import ChatRequest


class TestChatRequest(unittest.TestCase):
    """ChatRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatRequest:
        """Test ChatRequest
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `ChatRequest`
        """
        model = ChatRequest()
        if include_optional:
            return ChatRequest(
                history = admin_api_lib.rag_backend_client.openapi_client.models.chat_history.chat_history(
                    messages = [
                        admin_api_lib.rag_backend_client.openapi_client.models.chat_history_message.chat_history_message(
                            role = 'user', 
                            message = '', )
                        ], ),
                message = ''
            )
        else:
            return ChatRequest(
                message = '',
        )
        """

    def testChatRequest(self):
        """Test ChatRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
