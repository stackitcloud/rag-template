openapi: 3.0.2
info:
  title: extractor-api-lib
  version: 1.0.0
servers:
- url: /
paths:
  /extract_from_file:
    post:
      operationId: extract_from_file_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/extraction_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/information_piece'
                type: array
          description: List of extracted information.
        "422":
          description: Body is not a valid PDF.
        "500":
          description: Something somewhere went terribly wrong.
      tags:
      - extractor
  /extract_from_confluence:
    post:
      operationId: extract_from_confluence_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/confluence_parameters'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/information_piece'
                type: array
          description: ok
        "404":
          description: not found
        "422":
          description: unprocessable entity
        "500":
          description: internal server error
      tags:
      - extractor
components:
  schemas:
    extraction_request:
      description: ""
      example:
        path_on_s3: path on s3
      properties:
        path_on_s3:
          description: ""
          title: PathOnS3
          type: string
      required:
      - path_on_s3
      title: ExtractionRequest
      type: object
    key_value_pair:
      description: ""
      example:
        value: value
        key: key
      properties:
        key:
          description: ""
          title: Key
        value:
          description: ""
          title: Value
      title: MetaInformationPiece
      type: object
    content_type:
      description: ""
      enum:
      - IMAGE
      - TABLE
      - TEXT
      title: InformationType
      type: string
    information_piece:
      description: A piece of information that has been extracted.
      example:
        metadata:
        - key: key
          value: value
        - key: key
          value: value
        page_content: some text
        type: TEXT
      properties:
        metadata:
          description: ""
          items:
            $ref: '#/components/schemas/key_value_pair'
          title: MetaInformation
          type: array
        page_content:
          description: ""
          type: string
        type:
          $ref: '#/components/schemas/content_type'
      required:
      - metadata
      - page_content
      - type
      title: InformationPiece
      type: object
    confluence_parameters:
      description: ""
      properties:
        url:
          description: url of the confluence space.
          title: url
          type: string
        token:
          description: api key to access confluence.
          title: token
          type: string
        space_key:
          description: the space key of the confluence pages.
          title: space_key
          type: string
        include_attachments:
          default: false
          description: "whether to include file attachments (e.g., images, documents)\
            \ in the parsed content. Default is `false`."
          title: include_attachments
          type: boolean
        keep_markdown_format:
          default: true
          description: whether to preserve markdown formatting in the output. Default
            is `true`.
          title: keep_markdown_format
          type: boolean
        keep_newlines:
          default: true
          description: whether to retain newline characters in the output for better
            readability. Default is `true`.
          title: keep_newlines
          type: boolean
        document_name:
          description: The name that will be used to store the confluence db in the
            key value db and the vectordatabase (metadata.document).
          title: document_name
          type: string
        confluence_kwargs:
          description: Additional kwargs like verify_ssl
          items:
            $ref: '#/components/schemas/key_value_pair'
          title: confluence_kwargs
          type: array
      required:
      - document_name
      - space_key
      - token
      - url
      title: confluence_parameters
      type: object
