[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "extractor_api_lib"
version = "1.0.1"
description = "Extracts the content of documents, websites, etc and maps it to a common format."
authors = ["STACKIT Data and AI Consulting <data-ai-consulting@stackit.cloud>"]
packages = [{ include = "extractor_api_lib", from = "src" }]

[tool.flake8]
exclude = [".eggs", "./src/extractor_api_lib/models/*", ".git", ".hg", ".mypy_cache", ".tox", ".venv", ".devcontainer", "venv", "_build", "buck-out", "build", "dist", "**/__init__.py"]
statistics = true
show-source = false
max-complexity = 10
max-annotations-complexity = 3
docstring-convent = 'numpy'
max-line-length = 120
ignore = ["E203", "W503", "E704"]
inline-quotes = '"'
docstring-quotes = '"""'
multiline-quotes = '"""'
dictionaries = ["en_US", "python", "technical", "pandas"]
ban-relative-imports = true
per-file-ignores = """
  ./src/extractor_api_lib/apis/extractor_api.py: B008,WOT001,
  ./src/extractor_api_lib/impl/extractor_api_impl.py: B008,
  ./src/extractor_api_lib/container.py: CCE002,CCE001,
  ./src/extractor_api_lib/apis/extractor_api_base.py: WOT001,
  ./tests/*: S101,
"""

[tool.black]
line-length = 120
exclude = """
/(
  |  .eggs
  |  .git
  |  .hg
  |  .mypy_cache
  |  .nox
  |  .pants.d
  |  .tox
  |  .venv
  |  _build
  |  buck-out
  |  build
  |  dist
  |  node_modules
  |  venv
)/
"""

[tool.isort]
profile = "black"
skip = ['.eggs', '.git', '.hg', '.mypy_cache', '.nox', '.pants.d', '.tox', '.venv', '_build', 'buck-out', 'build', 'dist', 'node_modules', 'venv']
skip_gitignore = true
known_local_folder = ["extractor_api_lib", "rag_core_lib"]

[tool.pylint]
max-line-length = 120

[tool.poetry.dependencies]
python = "^3.13"
wheel = "^0.45.1"
botocore = "^1.38.10"
fasttext = {git = "https://github.com/cfculhane/fastText", rev = "main"}
pytesseract = "^0.3.10"
fastapi = "^0.115.12"
uvicorn = "^0.34.2"
dependency-injector = "^4.46.0"
pydantic-settings = "^2.9.1"
boto3 = "^1.38.10"
debugpy = "^1.8.14"
python-multipart = "^0.0.20"
oauthlib = "^3.2.2"
requests-oauthlib = "^2.0.0"
pdfplumber = "0.11.6"
opencv-python = "4.11.0.86"
pdf2image = "1.17.0"
datasets = "^3.5.1"
pandas = "^2.2.2"
tabulate = "^0.9.0"
lxml = "^5.4.0"
partial = "^1.0"
pyyaml = "^6.0.2"
numpy = "^2.2.5"
docx2txt = "^0.9"
unstructured = {extras = ["docx", "pptx"], version = "0.17.2"}
html5lib = "^1.1"
langchain-community = "^0.3.23"
atlassian-python-api = "^4.0.3"
markdownify = "^1.1.0"
langchain-core = "^0.3.58"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
coverage = "^7.8.0"
flake8 = "^7.2.0"
flake8-black = "^0.3.6"
flake8-pyproject = "^1.2.3"
flake8-quotes = "^3.4.0"
flake8-return = "^1.2.0"
flake8-annotations-complexity = "^0.1.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.12.12"
flake8-builtins = "^2.5.0"
flake8-comprehensions = "^3.15.0"
flake8-eradicate = "^1.5.0"
flake8-expression-complexity = "^0.0.11"
flake8-pytest-style = "^2.1.0"
pep8-naming = "^0.15.1"
flake8-eol = "^0.0.8"
flake8-exceptions = "^0.0.1a0"
flake8-simplify = "^0.21.0"
flake8-wot = "^0.2.0"
flake8-function-order = "^0.0.5"
flake8-tidy-imports = "^4.10.0"
black = "^25.1.0"
# flake8-logging-format = "^2024.24.12"
# flake8-docstrings = "^1.7.0"

[tool.poetry.group.tests.dependencies]
httpx = "^0.28.1"

[tool.pytest.ini_options]
log_cli = 1
log_cli_level = "DEBUG"
pythonpath = "src"
testpaths = "src/tests"
