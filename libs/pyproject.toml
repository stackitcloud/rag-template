[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "rag-core-lib"
version = "0.0.1"
description = "The perfect rag template"
authors = []
readme = "README.md"
license = ""
packages = [{ include = "openapi_server", from = "src" }]


[tool.poetry.dependencies]
python = "^3.11"
langchain = "^0.2.1"
uvicorn = "^0.30.0"
langchain-qdrant = "^0.1.0"
langchain-community = "^0.2.1"
dependency-injector = "^4.41.0"
fastapi = "^0.111.0"
flashrank = "^0.2.5"
pydantic-settings = "^2.2.1"
pydantic = "^2.7.2"
oauthlib = "^3.2.2"
requests-oauthlib = "^2.0.0"
langfuse = "^2.33.0"
qdrant-client = "^1.9.1"
aleph-alpha-client = "^7.1.0"
deprecated = "^1.2.14"


[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.1"
pytest = "^8.2.1"

[tool.black]
line-length = 120
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
skip = [
    '.eggs', '.git', '.hg', '.mypy_cache', '.nox', '.pants.d', '.tox',
    '.venv', '_build', 'buck-out', 'build', 'dist', 'node_modules', 'venv',
]
skip_gitignore = true

[tool.pylint]
max-line-length = 120


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
"line-length" = 120
"indent-width" = 4
"unsafe-fixes" = true
# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["F"]
ignore = ["S101", "ERA001", "COM812", "ISC001", "D213", "D211", "TD002", "TD003", "FIX002", "D401", "ANN101", "S105", "ANN002", "ANN003", "INP001", "S104", "S108", "FBT001", "FBT002", "PLW0603", "S106", "PLR2004", "B008", "RET505"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
