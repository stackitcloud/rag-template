"""
The rag backend API.

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

# coding: utf-8

import logging.config

import yaml
from dependency_injector.containers import Container
from fastapi import FastAPI
from rag_core_lib.impl.settings.logging_settings import LoggingSettings

from rag_core_api.apis.rag_api import router
from rag_core_api.dependency_container import DependencyContainer
from rag_core_api.impl import rag_api

with open(LoggingSettings().directory, "r") as stream:
    config = yaml.safe_load(stream)

logging.config.dictConfig(config)

app = FastAPI(
    title="RAG backend API",
    description="The perfect rag solution.",
    version="1.0.0",
)

app.include_router(router)

container = DependencyContainer()
container.wire(modules=[rag_api])
app.container = container


def register_dependency_container(new_container: Container):
    """Register a new dependency injection container.

    Registers a new container by overriding the existing one and preserving old wiring configuration.
    Then rewires the application with combined wiring targets from both old and new containers.

    Parameters
    ----------
    new_container : Container
        The new dependency injection container to register

    Returns
    -------
    None
    """
    # preserve old wiring
    wiring_target = container.wiring_config.modules
    app.container.override(new_container)

    # rewire
    wiring_target = list(set(wiring_target + new_container.wiring_config.modules))
    app.container.wire(modules=wiring_target)
