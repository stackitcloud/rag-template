FROM --platform=linux/amd64 python:3.11.7-bookworm

# Dev image for mcp-server (no local libs)
ENV POETRY_VIRTUALENVS_PATH=/app/services/mcp-server/.venv
ENV VIRTUAL_ENV="${POETRY_VIRTUALENVS_PATH}"
ENV POETRY_VERSION=2.1.3

WORKDIR /app

RUN DEBIAN_FRONTEND=noninteractive apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
       build-essential make \
    && python3 -m venv "${POETRY_VIRTUALENVS_PATH}" \
    && ${POETRY_VIRTUALENVS_PATH}/bin/pip install "poetry==${POETRY_VERSION}" \
    && rm -rf /var/lib/apt/lists/*
ENV PATH="${POETRY_VIRTUALENVS_PATH}/bin:$PATH"

# Copy lockfiles first for better caching
COPY services/mcp-server/pyproject.toml services/mcp-server/poetry.lock /app/services/mcp-server/

# Install dependencies with dev extras, without installing project itself
RUN poetry config virtualenvs.create false \
    && cd /app/services/mcp-server \
    && poetry install --no-interaction --no-ansi --no-root --with dev

# Create non-root user
RUN adduser --disabled-password --gecos "" --uid 65532 nonroot

WORKDIR /app/services/mcp-server
RUN mkdir -p log && chmod 700 log \
    && touch /app/services/mcp-server/log/logfile.log && chmod 600 /app/services/mcp-server/log/logfile.log

# Copy sources last
COPY --chown=nonroot:nonroot services/mcp-server /app/services/mcp-server

USER nonroot

CMD [ "poetry", "run", "python", "src/main.py" ]
