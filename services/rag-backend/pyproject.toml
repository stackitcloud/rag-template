[tool.poetry]
name = "rag-backend-usecase-example"
version = "3.2.0"
description = "This example demonstrates the use of the rag-core-lib and how to replace components of its dependency container."
authors = ["STACKIT Data and AI Consulting <data-ai-consulting@stackit.cloud>"]

[tool.poetry.dependencies]
python = "^3.13"
setuptools = "<80.9"
propcache = "0.4.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
coverage = "^7.8.0"

[tool.poetry.group.lint.dependencies]
flake8 = "^7.2.0"
flake8-black = "^0.4.0"
flake8-pyproject = "^1.2.3"
flake8-quotes = "^3.4.0"
flake8-return = "^1.2.0"
flake8-annotations-complexity = "^0.1.0"
flake8-bandit = "^4.1.1"
flake8-bugbear = "^24.8.19"
flake8-builtins = "^2.5.0"
flake8-comprehensions = "^3.15.0"
flake8-eradicate = "^1.5.0"
flake8-expression-complexity = "^0.0.11"
flake8-logging-format = "^2024.24.12"
flake8-docstrings = "^1.7.0"
flake8-pytest-style = "^2.0.0"
pep8-naming = "^0.15.1"
flake8-eol = "^0.0.8"
flake8-exceptions = "^0.0.1a0"
flake8-simplify = "^0.22.0"
flake8-wot = "^0.2.0"
flake8-function-order = "^0.0.5"
flake8-tidy-imports = "^4.10.0"

[tool.poetry.group.dev.dependencies]
debugpy = "^1.8.14"
rag-core-api = {path = "../../libs/rag-core-api", develop = true}
rag-core-lib = {path = "../../libs/rag-core-lib", develop = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.flake8]
exclude= [".eggs", "./libs/*", ".git", ".hg", ".mypy_cache", ".tox", ".venv", ".devcontainer", "venv", "_build", "buck-out", "build", "dist"]
statistics = true
show-source = false
max-complexity = 8
max-annotations-complexity = 3
docstring-convention = 'numpy'
max-line-length = 120
ignore = ["E203", "W503", "E704"]
inline-quotes = '"'
docstring-quotes = '"""'
multiline-quotes = '"""'
dictionaries = ["en_US", "python", "technical", "pandas"]
ban-relative-imports = true
per-file-ignores = """
  ./main.py: D100,
  ./tests/*: S101,D100,D103,D104
"""


[tool.black]
line-length = 120
exclude = """
/(
     .eggs
    | .git
    | .hg
    | .mypy_cache
    | .nox
    | .pants.d
    | .tox
    | .venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
    | venv
)/
"""


[tool.isort]
profile = "black"
skip = ['.eggs', '.git', '.hg', '.mypy_cache', '.nox', '.pants.d', '.tox', '.venv', '_build', 'buck-out', 'build', 'dist', 'node_modules', 'venv']
skip_gitignore = true

[tool.pylint]
max-line-length = 120

# Prefer PyPI, but allow resolving from TestPyPI for internal libs
[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
priority = "supplemental"


[tool.poetry.group.prod.dependencies]
rag-core-api = "==3.2.1"
rag-core-lib = "==3.2.1"


[tool.poetry.group.prod-local.dependencies]
# Use local path for Tilt/development with production Dockerfile
rag-core-api = {path = "../../libs/rag-core-api"}
rag-core-lib = {path = "../../libs/rag-core-lib"}
